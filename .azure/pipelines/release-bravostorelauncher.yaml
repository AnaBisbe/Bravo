trigger: none

pool:
  vmImage: 'windows-2022'

variables:
  arch: 'x64'
  configuration: 'Release'
  artifact: 'BravoStoreLauncher-$(arch)'

steps:
- task: MSBuild@1
  displayName: "MSBuild"
  inputs:
    solution: 'installer/msix/Bravo.Installer.Msix.StoreLauncher/Bravo.Installer.Msix.StoreLauncher.csproj'
    platform: '$(arch)'
    configuration: '$(configuration)'
    msbuildArguments: '/p:OutputPath="$(Build.BinariesDirectory)" /toolsversion:4.0 /verbosity:Normal'
    clean: true
- task: DotNetCoreCLI@2
  displayName: 'Install AzureSignTool'
  inputs:
    command: 'custom'
    custom: 'tool'
    arguments: 'update --global azuresigntool'
- task: CmdLine@2
  displayName: 'Code signing EXE'
  inputs:
    script: 'AzureSignTool sign -kvu "$(SigningVaultURL)" -kvt "$(SigningTenantId)" -kvi "$(SigningClientId)" -kvs "$(SigningClientSecret)" -kvc "$(SigningCertName)" -tr http://timestamp.digicert.com -v "$(Build.BinariesDirectory)\BravoStoreLauncher.exe"'
    failOnStderr: true
- task: CmdLine@2
  displayName: 'WiX compile app'
  inputs:
    script: '"%WIX%bin\candle.exe" BravoStoreLauncher.wxs -dPublishFolder="$(Build.BinariesDirectory)" -arch "$(arch)"'
    workingDirectory: '$(Build.SourcesDirectory)\installer\wix\src\BravoStoreLauncher'
    failOnStderr: true
- task: CmdLine@2
  displayName: 'WiX linker MSI'
  inputs:
    # -sice:ICE61 is used to ignore -> warning LGHT1076 : ICE61: This product should remove only older versions of itself. The Maximum version is not less than the current product.
    # -sice:ICE80 is used to ignore -> error LGHT0204 : ICE80: This 64BitComponent pbitool.json uses 32BitDirectory POWERBIEXTERNALTOOLSFOLDER
    script: '"%WIX%bin\light.exe" BravoStoreLauncher.wixobj -ext WixUIExtension.dll -dPublishFolder="$(Build.BinariesDirectory)" -cultures:en-us -loc BravoStoreLauncher-en-us.wxl -out "$(Build.ArtifactStagingDirectory)\$(artifact).msi" -spdb -sice:ICE61 -sice:ICE80'
    workingDirectory: '$(Build.SourcesDirectory)\installer\wix\src\BravoStoreLauncher'
    failOnStderr: true
- task: CmdLine@2
  displayName: 'Code signing MSI'
  inputs:
    script: 'AzureSignTool sign -kvu "$(SigningVaultURL)" -kvt "$(SigningTenantId)" -kvi "$(SigningClientId)" -kvs "$(SigningClientSecret)" -kvc "$(SigningCertName)" -tr http://timestamp.digicert.com -v "$(Build.ArtifactStagingDirectory)\$(artifact).msi"'
    failOnStderr: true
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
